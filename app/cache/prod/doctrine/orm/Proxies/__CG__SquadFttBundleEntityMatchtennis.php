<?php

namespace Proxies\__CG__\Squad\FttBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Matchtennis extends \Squad\FttBundle\Entity\Matchtennis implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Squad\\FttBundle\\Entity\\Matchtennis' . "\0" . 'idMatch', '' . "\0" . 'Squad\\FttBundle\\Entity\\Matchtennis' . "\0" . 'dateMatch', '' . "\0" . 'Squad\\FttBundle\\Entity\\Matchtennis' . "\0" . 'valeurEnPoint', '' . "\0" . 'Squad\\FttBundle\\Entity\\Matchtennis' . "\0" . 'tourTour', '' . "\0" . 'Squad\\FttBundle\\Entity\\Matchtennis' . "\0" . 'userUser', '' . "\0" . 'Squad\\FttBundle\\Entity\\Matchtennis' . "\0" . 'stadeStade', '' . "\0" . 'Squad\\FttBundle\\Entity\\Matchtennis' . "\0" . 'joueurs', '' . "\0" . 'Squad\\FttBundle\\Entity\\Matchtennis' . "\0" . 'sets'];
        }

        return ['__isInitialized__', '' . "\0" . 'Squad\\FttBundle\\Entity\\Matchtennis' . "\0" . 'idMatch', '' . "\0" . 'Squad\\FttBundle\\Entity\\Matchtennis' . "\0" . 'dateMatch', '' . "\0" . 'Squad\\FttBundle\\Entity\\Matchtennis' . "\0" . 'valeurEnPoint', '' . "\0" . 'Squad\\FttBundle\\Entity\\Matchtennis' . "\0" . 'tourTour', '' . "\0" . 'Squad\\FttBundle\\Entity\\Matchtennis' . "\0" . 'userUser', '' . "\0" . 'Squad\\FttBundle\\Entity\\Matchtennis' . "\0" . 'stadeStade', '' . "\0" . 'Squad\\FttBundle\\Entity\\Matchtennis' . "\0" . 'joueurs', '' . "\0" . 'Squad\\FttBundle\\Entity\\Matchtennis' . "\0" . 'sets'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Matchtennis $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdMatch()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdMatch();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdMatch', []);

        return parent::getIdMatch();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateMatch()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateMatch', []);

        return parent::getDateMatch();
    }

    /**
     * {@inheritDoc}
     */
    public function getValeurEnPoint()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValeurEnPoint', []);

        return parent::getValeurEnPoint();
    }

    /**
     * {@inheritDoc}
     */
    public function getTourTour()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTourTour', []);

        return parent::getTourTour();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserUser', []);

        return parent::getUserUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getStadeStade()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStadeStade', []);

        return parent::getStadeStade();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdMatch($idMatch)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdMatch', [$idMatch]);

        return parent::setIdMatch($idMatch);
    }

    /**
     * {@inheritDoc}
     */
    public function setDateMatch(\DateTime $dateMatch)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateMatch', [$dateMatch]);

        return parent::setDateMatch($dateMatch);
    }

    /**
     * {@inheritDoc}
     */
    public function setValeurEnPoint($valeurEnPoint)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValeurEnPoint', [$valeurEnPoint]);

        return parent::setValeurEnPoint($valeurEnPoint);
    }

    /**
     * {@inheritDoc}
     */
    public function setTourTour(\Squad\FttBundle\Entity\Tour $tourTour)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTourTour', [$tourTour]);

        return parent::setTourTour($tourTour);
    }

    /**
     * {@inheritDoc}
     */
    public function setUserUser(\Squad\FttBundle\Entity\Utilisateur $userUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserUser', [$userUser]);

        return parent::setUserUser($userUser);
    }

    /**
     * {@inheritDoc}
     */
    public function setStadeStade(\Squad\FttBundle\Entity\Stade $stadeStade)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStadeStade', [$stadeStade]);

        return parent::setStadeStade($stadeStade);
    }

    /**
     * {@inheritDoc}
     */
    public function getJoueurs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJoueurs', []);

        return parent::getJoueurs();
    }

    /**
     * {@inheritDoc}
     */
    public function setJoueurs($joueurs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJoueurs', [$joueurs]);

        return parent::setJoueurs($joueurs);
    }

    /**
     * {@inheritDoc}
     */
    public function getSets()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSets', []);

        return parent::getSets();
    }

    /**
     * {@inheritDoc}
     */
    public function setSets($sets)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSets', [$sets]);

        return parent::setSets($sets);
    }

}
